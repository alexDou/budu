# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type ChatEntity {
  status: String!
  status_report: String
  createdAt: DateTime!
}

input ChatInput {
  id: String!
  status: String!
  status_report: String!
}

type ChatMessagesEntity {
  author: String!
  message: String!
}

input ChatMessagesInput {
  author: String!
  message: String!
  chat: ChatInput!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type InvitationEntity {
  type: String!
  place: String!
  anything: String!
  time: DateTime!
  status: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input InviteInput {
  from: UserInput!
  to: UserInput!
  type: String!
  place: String!
  anything: String!
  time: DateTime!
  status: String!
}

type Mutation {
  updateUser(user: UserUpdateInput!, userId: String!): User!
  updateUserMeeting(user_meeting: UserInput!, umId: String!): UserMeeting!
  updateUserRole(role: String!, roleId: String!): UserRoles!
  saveUserRole(role: String!, userId: String!): UserRoles!
  updateUserPhoto(open_for: String!, ofId: String!): UserMeetingOpenFor!
  saveUserPhoto(photo: String!, userId: String!): UserPhotos!
  saveUserMeetingType(meeting_type: String!, userId: String!): UserMeetingType!
  saveUserOpenFor(open_for: String!, userId: String!): UserMeetingOpenFor!
  updateUserLookFor(age: Int!, gender: String!, lfId: String!): UserMeetingLookFor!
  saveUserLookFor(age: Int!, gender: String!, userId: String!): UserMeetingLookFor!
  updateInvite(invite: InviteInput!, iId: String!): InvitationEntity!
  saveInvite(invite: InviteInput!): InvitationEntity!
  withdrawInvite(iId: String!): Boolean!
  updateChat(chat: ChatInput!, cId: String!): ChatEntity!
  saveChat(chat: ChatInput!): ChatEntity!
  updateChatMessage(chat_messages: ChatMessagesInput!, cmId: String!): ChatMessagesEntity!
  saveChatMessage(chat_message: ChatMessagesInput!, chatId: String!): ChatMessagesEntity!
  removeChatMessage(cmId: String!): Boolean!
  updateReview(review: ReviewInput!, rId: String!): ReviewEntity!
  saveReview(review: ReviewInput!): ReviewEntity!
  withdrawReview(rId: String!): Boolean!
  updateRating(rating: RatingInput!, rId: String!): RatingEntity!
  saveRating(rating: RatingInput!): RatingEntity!
  updateNotificationStatus(status: String!, nId: String!): Boolean!
  saveNotification(notification: NotificationInput!): NotificationEntity!
  removeNotification(nId: String!): Boolean!
}

type NotificationEntity {
  type: String!
  details: String
  message: String!
  status: String!
  updatedAt: DateTime!
}

input NotificationInput {
  id: String!
  type: String!
  details: String!
  message: String!
  status: String!
  user: UserInput!
}

type Query {
  getUser(userId: String!): User!
  users: [User!]!
  usersMeeting: [UserMeeting!]!
  userMeetingById(userId: String!): UserMeeting!
  user_invites_sent(userId: String!): [InvitationEntity!]!
  user_invites_incoming(userId: String!): [InvitationEntity!]!
  inviteById(iId: String!): InvitationEntity!
  inviteByTypeAndUser(inviter: Boolean!, type: String!, userId: String!): InvitationEntity!
  chat(cId: String!): [ChatEntity!]!
  chat_messages(chatId: String!): [ChatMessagesEntity!]!
  user_reviews_sent(userId: String!): [ReviewEntity!]!
  user_reviews_incoming(userId: String!): [ReviewEntity!]!
  user_rating(userId: String!): [RatingEntity!]!
  user_notifications(userId: String!): [NotificationEntity!]!
}

type RatingEntity {
  rating: Float!
  createdAt: DateTime!
}

input RatingInput {
  id: String!
  user: UserInput!
  rating: Float!
}

type ReviewEntity {
  reviewer: String!
  subject: String!
  grade: Int!
  review: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

input ReviewInput {
  id: String!
  invitation: InviteInput!
  reviewer: String!
  subject: String!
  grade: Int!
  review: String!
}

type User {
  status: String!
  status_comment: String!
}

input UserInput {
  arbitraryName: String!
  gender: String!
  age: Int!
  geoposition: String!
  phone: String!
}

type UserMeeting {
  publicName: String!
  gender: String!
  age: Int!
  geoposition: String!
  phone: String
  anything: String
}

type UserMeetingLookFor {
  value: String!
}

type UserMeetingOpenFor {
  value: String!
}

type UserMeetingType {
  value: String!
}

type UserPhotos {
  value: String!
}

type UserRoles {
  value: String!
}

input UserUpdateInput {
  username: String!
  email: String!
  status: String!
  status_comment: String!
}
